[
["index.html", "R Markdown for Medicine Preface", " R Markdown for Medicine Alison Hill1 Peter Higgins2 2019-07-23 Preface This is being developed for a workshop in September at the 2019 R/Medicine conference. This book is not intended to be a ‚Äústand-alone‚Äù or authoritative resource on this topic (yet!), nor will it capture all workshop content. This is a book to organize and share ideas and code. RStudio, https://alison.rbind.io/‚Ü© University of Michigan, https://www.uofmhealth.org/profile/4/peter-doyle-higgins-md-phd‚Ü© "],
["prework.html", "Prework", " Prework Welcome to the R Markdown for Medicine workshop! We look forward to meeting you in person. Before attending the workshop, please complete the following prework: Sign up for a free RStudio Cloud account at https://rstudio.cloud/ before the workshop. I recommend logging in with an existing Google or GitHub account, if you have one (rather than creating a new account with another password you have to remember). Complete this 10-minute interactive tutorial on Markdown. Please bring a laptop that has the following installed: A recent version of R (&gt;=3.6.0), which is available for free at https://cloud.r-project.org/ A recent version of RStudio Desktop (&gt;=1.2), available for free (RStudio Desktop Open Source License) The R packages we will use, which you can install by connecting to the internet, opening RStudio, and running at the command line: install.packages(c(&quot;rmarkdown&quot;, &quot;distill&quot;, &quot;bookdown&quot;, &quot;tidyverse&quot;, &quot;here&quot;, &quot;janitor&quot;, &quot;skimr&quot;, &quot;flextable&quot;, &quot;arsenal&quot;, &quot;scico&quot;, &quot;cowplot&quot;)) Don‚Äôt forget your power cord! On the day of the workshop, I‚Äôll provide you with an RStudio Cloud project that contains all of the course materials. We will use the software listed above only as an important backup should there be problems with the on-site internet connection. "],
["workshop-outline.html", "Workshop outline", " Workshop outline Introduction (~10 min) Show ‚Äúfirst look‚Äù Rmd (has all the things: table one, multi-panel plot, etc) Your turn Get in groups, introduce, KNIT (to HTML)! Read through Rmd + output, what does it do? Annotate, narrate. Session 1: R Markdown Basics (40 min) Basic anatomy of this Rmd doc (4 key components) (~5 min) YAML (~5 min) Markdown (~5 min) Headers Lists Links and images Equations Tables Code (~10 min) Code chunks Inline code Chunk options Your turn (~10 min) Change output format in YAML to distill::distill_article (note! default global knitr echo = FALSE for this output format!) Change some code chunks to include=FALSE I have echo = TRUE set as a global option; turn this to FALSE then set the most critical code chunks to echo = TRUE (Perhaps?) add more meaningful headers and chunk names (then look at in up/down nav and how to show document outline in RStudio) How it all works (~5 min) Session 2: Tables (45 min) Change the output format to word! (~5 min) Make table one with arsenal::tableby() (~20 min): remember to point out knitr code chunk options to results=&quot;asis&quot; grouped by arm with details on sex and age in each group ungrouped, with stats on BMI, sex, Age in each group control digits export table Consider flextable here? Your turn (~10 min) "],
["uplevels.html", "Uplevels", " Uplevels What are uplevels? The Urban Dictionary gives this definition: ‚ÄúInspired strategic action creating greater capabilities‚Äù We provide uplevels for each workshop section: these are extras we won‚Äôt be able to cover in the workshop, but are ways that participants can go beyond the workshop materials to see additional ways that they can expand their R Markdown superpowers. Through the book, we highlight specific ways that RStudio can expedite your package development workflow, in specially formatted sections like this. RStudio exposes load_all() in the Build menu, in the Build pane via More &gt; Load All, and in keyboard shortcuts Ctrl + Shift + L (Windows &amp; Linux) or Cmd + Shift + L (macOS). Your turn "],
["warmup-intro.html", "Introduction 0.1 First look 0.2 First report 0.3 First draft", " Introduction Welcome! Let‚Äôs take a look at a few R Markdown documents to get a feel for what we‚Äôll be learning today. For this workshop, we‚Äôll show you four R Markdown documents, each highlighting a different and distinct stage within a research project. 0.1 First look An exploratory data analysis 0.2 First report A high-level progress report 0.3 First draft A draft medical manuscript "],
["introduction.html", "Introduction", " Introduction Check out first-look.Rmd. "],
["basic-anatomy.html", "Chapter 1 Basic Anatomy", " Chapter 1 Basic Anatomy A plain text file with a special file extension: .Rmd What does plain text mean? Everything you see can be typed with a normal keyboard. This means anyone can read and edit a .Rmd file. What does the file extension do? Aim to build up vocabulary and intuition around (use default output format here, HTML, and knit with button; consider providing a template to use here and publish to RSConnect quick; highlight how chunk naming works like setup chunk and browsability within IDE [ i.e., table of contents on right] plus how fig.path works): metadata (= YAML), ‚Üí either rmarkdown (for params) or pandoc text (= Markdown), [but inline code is processed by rmarkdown r] R code (= knitr), [other code too! Today we use for R, but I do want you to know‚Ä¶] Output (control with knitr code chunk options). Formative assessments focus on ‚Äúif I want to change X, what do I search for?‚Äù Activity: Open a new Rmd file- read through it- knit it. ‚Üí for each activity, do it first (model), then they do (build up muscle memory for knitting bc they‚Äôll have done it like 50 times throughout workshop) start with prewritten script and work from there- fill in‚Ä¶. nice warmup activity- get in groups, introduce, work through script, what does it do? Annotate, narrate. "],
["using-r-markdown-in-rstudio.html", "Chapter 2 Using R Markdown in RStudio", " Chapter 2 Using R Markdown in RStudio Projects Knit button "],
["whole-document-metadata.html", "Chapter 3 Whole document metadata 3.1 All about YAML 3.2 Changing output formats 3.3 Adding output options", " Chapter 3 Whole document metadata You are probably not used to thinking about medical manuscripts as having ‚Äúmetadata‚Äù, but all files have metadata. Some is set for you automatically by your software (right-click on a file on your computer and select ‚ÄúGet Info‚Äù to see some). Others you may set yourself, like in a document‚Äôs filename; think: asd_obesity_2015.Rmd. Other metadata may be present in your directory structure, like: Documents/ ‚îî‚îÄ‚îÄ manuscripts/ ‚îú‚îÄ‚îÄ autism-treatment-network/ ‚îÇ ‚îú‚îÄ‚îÄ asd_aggression_2014.Rmd ‚îÇ ‚îú‚îÄ‚îÄ asd_obesity_2015.Rmd ‚îÇ ‚îî‚îÄ‚îÄ asd_mullen_2019.Rmd So the file asd_obesity_2015.Rmd was my analysis of data from the Autism Treatment Network for a manuscript on obesity we published in 2015. When you start working in R Markdown, we try to store metadata inside the document itself. The place to store it is in what is called the YAML header (sometimes called YAML frontmatter), which is the space at the top of your .Rmd that is fenced in by three dashes as delimiters (---) like this: --- title: A compelling manuscript author: Alison Hill output: html_document --- What kinds of metadata are useful for medical manuscripts? Think about things you may often add to the header of a Word document you plan to share with other people like collaborators: the author the date the document was written (or last updated!) a title (perhaps with a subtitle) to frame what the document is all about for the reader All of these things are ‚Äúkeys‚Äù we can add to an .Rmd document using the YAML header. Output options (add a table of contents, theme / extra: make it floating, add code download button) Output formats (change the output from html_document to word_document and now ‚ÄúKnit to Word‚Äù) 3.1 All about YAML YAML stands for ‚ÄúYAML Ain‚Äôt No Markup Language‚Äù, and you are not the only one to read that and think ‚Äúwell, that is not very helpful at all.‚Äù The most important things to know about YAML are that: You can only have one YAML per .Rmd document (meaning, there is only one source of metadata for the file, which makes sense!). The contents of a YAML are formatted as a series of key: value pairs separated by colons; each key on a new line. In the YAML above, the keys are title, author, and output. Indentation matters. Indentation matters. Indentation matters. You can ‚Äúreuse‚Äù the content in your YAML in your text too. For example, using R code, rmarkdown::metadata$title will print: R Markdown for Medicine ‚Ä¶in this text, because it is pulling metadata from our book‚Äôs title set in the YAML. 3.2 Changing output formats Let‚Äôs focus first on the most important key in our YAML above: the output format. R Markdown comes with a suite of possible ‚Äúoutput formats‚Äù built-in. Your turn Change this document‚Äôs output format from html_document to word_document. Save and üß∂ ‚ÄúKnit to Word‚Äù! 3.3 Adding output options In YAML, indentation is used to indicate nesting. Why do you need to indent? Usually, you want to add output options for a given output format. Output options can be set in your YAML, but they must be nested under the output format. The spacing here is critical as you won‚Äôt get an error message when you do it wrong- usually your document will ‚Äúknit‚Äù but silently fail. On the right, I‚Äôve added some options to the html_document format. We can give the document a table of contents, and make it a floating table of contents, by setting both option arguments to true (the default is false). Try it out to see what this looks like. --- title: A compelling manuscript author: Alison Hill output: html_document: toc: true toc_float: true --- Your turn Word documents can have a table of contents too, but not a floating one. Try adding a toc to your word document output. Save and üß∂ ‚ÄúKnit to Word‚Äù! You can see output options for each output format on the R Markdown reference page. For example, here are the options for word documents. When options are set in the YAML, replace = with : with each key-value pair on a new line. Watch your indentation. "],
["add-text-with-markdown.html", "Chapter 4 Add text with Markdown 4.1 Headers 4.2 Text &amp; Images", " Chapter 4 Add text with Markdown 4.1 Headers Headers are useful for organizing your document into sections, and with Markdown formatting you can have up to 6 types/sizes of headers. Use a # symbol before the label to create a new header. # HEADER 1 ## HEADER 2 ### HEADER 3 #### HEADER 4 ##### HEADER 5 ###### HEADER 6 Header 1 Header 2 Header 3 Header 4 Header 5 Header 6 4.2 Text &amp; Images Let‚Äôs take a lightly-edited snippet from a blog post originally published on the Huffington Post in 2010, and show it in raw Markdown (L) and rendered (R). Childhood vaccines are one of the *great triumphs* of modern medicine. Indeed, parents whose children are vaccinated no longer have to worry about their child&#39;s death or disability from: - whooping cough, - polio, - diphtheria, - hepatitis, or - a host of other infections. Vaccines are the **most cost-effective** health care interventions there are... We have three new, extremely effective vaccines to roll out in developing countries: 1. pneumonia 1. rotavirus 1. meningitis A By Ezekiel J. Emanuel, M.D., Ph.D. [Photo:](https://en.wikipedia.org/wiki/Vaccine) Receiving rubella vaccination, Brazil, 2008. ![](http://bit.ly/VaccineBySandraRugio) Childhood vaccines are one of the great triumphs of modern medicine. Indeed, parents whose children are vaccinated no longer have to worry about their child‚Äôs death or disability from: whooping cough, polio, diphtheria, hepatitis, or a host of other infections. Vaccines are the most cost-effective health care interventions there are‚Ä¶ We have three new, extremely effective vaccines to roll out in developing countries: pneumonia rotavirus meningitis A By Ezekiel J. Emanuel, M.D., Ph.D. Photo: Receiving rubella vaccination, Brazil, 2008. Your turn Try using Markdown formatting to add some bold text or italics. If this is easy, try creating numbered and unnumbered lists, or adding links or images. "],
["add-code.html", "Chapter 5 Add code", " Chapter 5 Add code Evaluate code chunks Add chunks (keyboard shortcut Ctrl + Alt + I (OS X: Cmd + Option + I)) Inline code Why name chunks? "],
["use-chunk-options.html", "Chapter 6 Use chunk options 6.1 How it all works", " Chapter 6 Use chunk options play with include, echo (change the package loading chunk to include = TRUE) use setup chunks to change all chunk options (fig.path!) 6.1 How it all works "],
["up-rmd.html", "Chapter 7 Uplevel 7.1 Adding output formats 7.2 Adding multiple YAML keys 7.3 Live preview without reknitting 7.4 Beef up your YAML 7.5 Knit with parameters 7.6 Knit from the command line 7.7 Extend your R Markdown 7.8 R Markdown templates 7.9 GitHub", " Chapter 7 Uplevel 7.1 Adding output formats You can also have more than one output format! If no output options need to be specified, the output format needs to be suffixed by default. --- title: A compelling manuscript author: Alison Hill output: word_document: toc: true pdf_document: default --- Your turn Try adding html_document: default as an additional output format. 7.2 Adding multiple YAML keys Sometimes (but only sometimes), you may wish to have multiple items within a single YAML key. Let‚Äôs take the author key for example, because you can have more than one author: --- title: A compelling manuscript author: - Alison Hill - Peter Higgins output: html_document: toc: true toc_float: true --- Your turn Try adding 7.3 Live preview without reknitting Install the xaringan package, which is for making slides using R Markdown. You could use it for this (I do!), but you can just install the package for a single useful Addin that will allow you to live preview any single R Markdown document with an HTML output format as you edit and save the changes. install.packages(&quot;xaringan&quot;) After installing the package, be sure to restart your R session. Then use the Addings drop-down menu in RStudio to ‚Äúturn on‚Äù Infinite Moon Reader. Test it out by opening up first-look.Rmd again, make a change to something, and click the save button in RStudio. Your live preview HTML output document should update immediately. 7.4 Beef up your YAML ymlthis! What happens if you want to add two possible output formats? You use your YAML- check out what happens to your knit button when working in RStudio if you update your YAML to look like this: --- title: &quot;Response and adverse events to chemotherapy: A mock study&quot; author: - &quot;Alison Hill, Ph.D.&quot; - &quot;Peter Higgins, MD, Ph.D.&quot; output: rmarkdown::html_document: default distill::distill_article: default --- TODO: show how to use ymlthis this add these output formats 7.5 Knit with parameters 7.6 Knit from the command line Cover render() here, and how it can override your YAML 7.7 Extend your R Markdown There are multiple R Markdown ‚Äúextension packages‚Äù which (once installed) give you even more output formats to choose from (like dashboards, slide presentations, books, and blogs). The book you are reading is written using the bookdown package, with the bookdown::gitbook output format. Here are some packages you can experiment with to extend the output formats available to you for a single R Markdown document: Package = R Markdown + New output format rmarkdown Bootswatch CSS rmarkdown::html_document flexdashboard flexbox CSS flexdashboard::flex_dashboard xaringan remark.js xaringan::moon_reader distill Distill CSS distill::distill_article pagedown Paged.js / ReLaXedJS pagedown::html_paged pagedown::html_resume + others 7.8 R Markdown templates Use by adding to YAML or knitting at the command line (recommend focusing on beefing up your YAML). rticles any package like rmd4edu tufte::tufte_html distill::distill_article If you want to add an additional output format without output options, then you need specify : default. output: distill::distill_article: toc: true tufte::tufte_html: default 7.9 GitHub "],
["introduction-1.html", "Introduction", " Introduction Check out first-report.Rmd. Output format is distill article. Note that Distill for R Markdown uses the bookdown implementation of cross-references under the hood. Maybe at end, change output format to bookdown::word_document2 or bookdown::html_document2 "],
["janitor-tabyls.html", "Chapter 8 Janitor tabyls", " Chapter 8 Janitor tabyls These are fantastic for 2- and 3-way frequency tables. DO NOT MISS the adorn functions. Pipe to knitr::kable() for pretty rendering in most output formats. "],
["make-a-table-1.html", "Chapter 9 Make a ‚ÄúTable 1‚Äù 9.1 The arsenal package 9.2 The tableone package", " Chapter 9 Make a ‚ÄúTable 1‚Äù 9.1 The arsenal package 9.2 The tableone package "],
["markdown-tables.html", "Chapter 10 Markdown tables", " Chapter 10 Markdown tables "],
["kable-tables.html", "Chapter 11 kable tables", " Chapter 11 kable tables "],
["flextable.html", "Chapter 12 flextable", " Chapter 12 flextable "],
["up-tables.html", "Chapter 13 Uplevel 13.1 HTML widgets (DT) 13.2 Tables for EDA", " Chapter 13 Uplevel 13.1 HTML widgets (DT) 13.2 Tables for EDA We could make a giant table of table-making packages suitable for exploratory data analysis in R. Hmisc skim psych describe "],
["introduction-2.html", "Introduction", " Introduction Check out a new Rmd file here. This will sort of be where we hopefully get into a bit of a groove "],
["projects-and-files.html", "Chapter 14 Projects and files", " Chapter 14 Projects and files What goes where "],
["importing-data.html", "Chapter 15 Importing data", " Chapter 15 Importing data Options like excel, googlesheets "],
["using-data.html", "Chapter 16 Using data", " Chapter 16 Using data primarily here package stuff with file paths "],
["dealing-with-other-peoples-data.html", "Chapter 17 Dealing with other people‚Äôs data", " Chapter 17 Dealing with other people‚Äôs data janitor::clean_names() is a life-saver "],
["r-markdown-collections.html", "Chapter 18 R Markdown collections", " Chapter 18 R Markdown collections At some point, after using R Markdown for awhile, you may find yourself experiencing growing pains working with single R Markdown documents. If you do a lot of data wrangling and EDA, you‚Äôll find your R Markdown documents can become quite long, making it hard to find what you need when you need it. That is when you know it is time to evolve! A few ways to evolve your R Markdown ways: Start making good use of .R scripts and ‚Äúoutsource‚Äù those using source(wrangle.R). Start using R Markdown child documents. Recommended: start building an R Markdown collection per project. This is what we‚Äôll demo now. We think this is the most flexible workflow that allows your research project to grow and change along with your ideas and needs. bookdown::word_document2 "],
["up-flow.html", "Chapter 19 Uplevel 19.1 GitHub 19.2 Collaborating 19.3 Datapasta 19.4 Reprex", " Chapter 19 Uplevel 19.1 GitHub 19.2 Collaborating https://noamross.github.io/redoc/ https://github.com/ekothe/rmdrive 19.3 Datapasta Sharing data 19.4 Reprex Getting help "],
["introduction-3.html", "Introduction", " Introduction Check out a new Rmd file here. "],
["controlling-size.html", "Chapter 20 Controlling size", " Chapter 20 Controlling size knitr stuff "],
["controlling-resolution.html", "Chapter 21 Controlling resolution", " Chapter 21 Controlling resolution knitr stuff "],
["adding-captions-references.html", "Chapter 22 Adding captions &amp; references", " Chapter 22 Adding captions &amp; references knitr stuff "],
["exporting-all-graphics.html", "Chapter 23 Exporting all graphics", " Chapter 23 Exporting all graphics knitr fig.path trick "],
["multi-panel.html", "Chapter 24 Multi-panel", " Chapter 24 Multi-panel cowplot (tag as a/b/c/d) "],
["up-graphics.html", "Chapter 25 Uplevel", " Chapter 25 Uplevel "],
["colophon.html", "A Colophon", " A Colophon The CSS for this book is adapted from the CSS developed by Desir√©e De Leon for the bookdown book ‚Äúrstudio4edu: A Handbook for Teaching and Learning with R and RStudio‚Äù. Our thanks to Desir√©e for creating such a beautiful bookdown style! All colors derived from Werner‚Äôs nomenclature of colors. "]
]
